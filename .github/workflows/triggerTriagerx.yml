name: Run when "triagerx" is mentioned in an issue comment

on:
  issue_comment:
      types: [created]

jobs:
  triagerx_trigger:
    runs-on: ubuntu-latest
    if: startsWith(github.event.comment.body, 'triagerx')
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
        with:
          repository: Tigers-X/openj9
          ref: master
          
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install axios @actions/github @actions/core

      - name: Make a request to the TriagerX server
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const axios = require('axios');
            const core = require('@actions/core');
            const github = require('@actions/github');

            const commentBody = context.payload.comment.body;
            const restCommentBody = commentBody.replace('triagerx', '');

            let issueUrl = commentBody.includes('https') ? restCommentBody.trim() : context.payload.issue.html_url;
            let issueNumber = issueUrl.split('/').pop();
            let issueOwner = issueUrl.split('/')[3];
            let issueRepo = issueUrl.split('/')[4];

            const { data: issueData } = await github.issues.get({
              issue_number: issueNumber,
              owner: issueOwner,
              repo: issueRepo
            });

            const issueTitle = issueData.title;
            const issueDescription = issueData.body;

            core.setOutput('issue_title', issueTitle);
            core.setOutput('issue_description', issueDescription);

      - name: Run recommendations
        run: node .github/recommendation.js
        env:
          ISSUE_TITLE: ${{ steps.extract_issue.outputs.issue_title }}
          ISSUE_DESCRIPTION: ${{ steps.extract_issue.outputs.issue_description }}